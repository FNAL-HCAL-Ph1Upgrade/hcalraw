import re

# Shunt settings to keep
SHUNT_MASK = [0b00000, 0b00001, 0b00010, 0b00100, 0b01000, 0b10000, 0b10010, \
              0b10100, 0b11000, 0b11010, 0b11100, 0b11110, 0b11111]

# (?<!_)    NOT preceeded by _
# \d+       at least one decimal number (0-9)
# \.        includes a .
r = re.compile(r"(?<!_)\d+\.\d+")

ADC_charges = {}
with open("adc_charges.txt", 'r') as f:
    for i,line in enumerate(f):
        if line == '\n': continue

        # re.findall returns a list of strings
        # Convert to list of floats before saving
        ADC_charges.update( {SHUNT_MASK[len(ADC_charges)] : [float(val) for val in r.findall(line)] } )

# To find the corresponding conversion factor
# adc_to_charge[shunt][adc]


def getADC_charge(shunt, adc):
    return ADC_charges[shunt][adc]


adcToCharge = [1.6,  4.9,  8.2,  11.5,  14.8,  18.1,  21.4,  24.8,  28.0,  31.3,  34.6,  37.9,  41.2,  44.5,  47.8,  51.1,  56.1,  62.7,  69.3,  75.9,  82.5,  89.1,  95.7,  102.3,  108.9,  115.5,  122.1,  128.7,  135.3,  141.9,  148.5,  155.1,  161.7,  168.3,  174.9,  181.5,  191.4,  204.6,  217.8,  231.0,  244.2,  257.4,  270.6,  283.8,  297.0,  310.2,  323.4,  336.6,  349.8,  363.0,  376.2,  389.4,  402.6,  415.8,  429.0,  442.2,  455.4,  475.2,  501.6,  528.0,  554.4,  580.8,  607.2,  633.6,  580.8,  607.2,  633.6,  660.0,  686.4,  712.8,  739.2,  765.6,  792.0,  818.4,  844.8,  871.2,  897.6,  924.0,  950.4,  976.8,  1016.4,  1069.2,  1122.0,  1174.8,  1227.6,  1280.4,  1333.2,  1386.0,  1438.8,  1491.6,  1544.4,  1597.2,  1650.0,  1702.8,  1755.6,  1808.4,  1861.2,  1914.0,  1966.8,  2019.6,  2098.8,  2204.4,  2310.0,  2415.6,  2521.2,  2626.8,  2732.4,  2838.0,  2943.6,  3049.2,  3154.8,  3260.4,  3366.0,  3471.6,  3577.2,  3682.8,  3788.4,  3894.0,  3999.6,  4105.2,  4210.8,  4369.2,  4580.4,  4791.6,  5002.8,  5214.0,  5425.2,  5636.4,  5214.0,  5425.2,  5636.4,  5847.6,  6058.8,  6270.0,  6481.2,  6692.4,  6903.6,  7114.8,  7326.0,  7537.2,  7748.4,  7959.6,  8170.8,  8382.0,  8698.8,  9121.2,  9543.6,  9966.0,  10388.4,  10810.8,  11233.2,  11655.6,  12078.0,  12500.4,  12922.8,  13345.2,  13767.6,  14190.0,  14612.4,  15034.8,  15457.2,  15879.6,  16302.0,  16724.4,  17358.0,  18202.8,  19047.6,  19892.4,  20737.2,  21582.0,  22426.8,  23271.6,  24116.4,  24961.2,  25806.0,  26650.8,  27495.6,  28340.4,  29185.2,  30030.0,  30874.8,  31719.6,  32564.4,  33409.2,  34254.0,  35521.2,  37210.8,  38900.4,  40590.0,  42279.6,  43969.2,  45658.8,  42279.6,  43969.2,  45658.8,  47348.4,  49038.0,  50727.6,  52417.2,  54106.8,  55796.4,  57486.0,  59175.6,  60865.2,  62554.8,  64244.4,  65934.0,  67623.6,  70158.0,  73537.2,  76916.4,  80295.6,  83674.8,  87054.0,  90433.2,  93812.4,  97191.6,  100570.8,  103950.0,  107329.2,  110708.4,  114087.6,  117466.8,  120846.0,  124225.2,  127604.4,  130983.6,  134362.8,  139431.6,  146190.0,  152948.4,  159706.8,  166465.2,  173223.6,  179982.0,  186740.4,  193498.8,  200257.2,  207015.6,  213774.0,  220532.4,  227290.8,  234049.2,  240807.6,  247566.0,  254324.4,  261082.8,  267841.2,  274599.6,  284737.2,  298254.0,  311770.8,  325287.6,  338804.4,  352321.2,  365838.0]
